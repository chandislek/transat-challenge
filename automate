
#AUTOMATE EMBARQUE RASPBERRY 3B+

1)Système d'exploitation : LINUX
https://www.raspberrypi.org/downloads/
l'image RASPBIAN est enregistrée une carte SDmini
avec SSH activé , login pi , hostname raspberrypi, raspberry

connection par terminal texte depuis PC @raspberrypi:
https://www.putty.org/

connexion par VNC depuis terminal PC avec serverVNC activé:
sudo raspi-config
aller dans menu"interfacing option""VNC"

connection par VNCviewer sur PC @raspberrypi:
https://www.realvnc.com/fr/connect/download/viewer/windows/

la création d'un fichier de programme python3 : 
sudo nano chandislek.py
exécution du fichier :
sudo python chandislek.py
affiche un fichier :
cat chandislek.py

carte extension capteur : GROVEPI+ dexter seeed
https://www.youtube.com/watch?v=lsaXVRk6mKE
récupérer des fichiers sur internet et installation de la bibliothèque grovepi :
curl -kL dexterindustries.com/update_grovepi | bash
ou récupérer le repository grovepi :
mkdir ~/Dexter
cd /home/pi/Dexter
git clone https://github.com/DexterInd/GrovePi.git
cd /home/pi/Dexter/GrovePi/Script
bash ./update_grovepi.sh

vérification liaison RASPI-GROVEPI+ :
sudo i2cdetect -y 1
test LCD :
cd /home/pi/Dexter/GrovePi/Software/Python/grove_rgb_lcd
python grove_rgb_lcd.py


connection des modules grove :
Grove – Relay > D2
Grove – Temp&Humi Sensor > D3
Grove – Ultrasonic Ranger > D4
Grove – LED Bar V2.0 > D5
Grove – Buzzer > D6
Grove – Button > D7
Grove – Rotary Angle Sensor > A0
Grove – Sound Sensor > A1
Grove – Light Sensor > A2
Grove – LCD Display > I2C


2) Lecture des fichiers météorologiques : GRIB 2
https://confluence.ecmwf.int//display/ECC/ecCodes+Home
l'interface en Python3 des ecCodes se fait conformément à  PyPI https://pypi.org/project/eccodes/

les prévisions sont disponibles librement sur météoFrance
https://donneespubliques.meteofrance.fr/?fond=produit&id_produit=130&id_rubrique=51

3) système surveillance vidéo: motionEyeOS
https://github.com/ccrisan/motioneyeos/wiki

4) système détection d'obstacle : YOLO darknet et VPU MOVIDIUS NCS 2
bibliothèque VPU : openVino
bibliothèque détection d'obstacle : opencv

5)système d'exploitation navigation : openplotter
http://www.sailoog.com/openplotter
https://openplotter.readthedocs.io/en/latest/getting_started/downloading.html

logiciel traceur : openCPN
https://opencpn.org/OpenCPN/info/downloads.html
autopilote: 
http://pypilot.org/wiki/doku.php

6)carte d'interface physique :
-capteurs

-actionneurs


7) Alternative système IOT : windows 10
https://devblogs.microsoft.com/premier-developer/getting-started-with-windows-10-iot-core-raspberry-pi-3b/
https://www.microsoft.com/en-us/software-download/windows10iotcore
https://docs.microsoft.com/fr-fr/windows/iot-core/tutorials/rpi
https://docs.microsoft.com/fr-fr/windows/iot-core/tutorials/adafruitkit

8) command line RASPI :
ls
cd
tree
df -h
git
curl

9) compiler une application source pour RASPI :
./configure --help
make
make install

10) Mettre à jour la liste des paquets et la mise à niveau de RASPBIAN :
add-apt-repository nomrepositorynonraspbian
sudo apt-get update
apt-get install nompaquet

apt list --upgradable
apt-get upgrade
sudo apt-get dist-upgrade
sudo apt clean
sudo reboot

dpkg --get-selections -l
apt-cache search nompaquet
apt-cache show
apt-get purge nompaquet


